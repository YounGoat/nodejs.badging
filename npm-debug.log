0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.10.5
3 info using node@v4.4.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/jiangjing/JPO/WorkingSpace/YUAN.npm/badging',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/jiangjing/.npm/badging/0.0.3/package.tgz not in flight; packing
9 verbose correctMkdir /Users/jiangjing/.npm correctMkdir not in flight; initializing
10 info lifecycle badging@0.0.3~prepublish: badging@0.0.3
11 silly lifecycle badging@0.0.3~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/jiangjing/.npm/badging/0.0.3/package.tgz',
12 verbose tar pack   '/Users/jiangjing/JPO/WorkingSpace/YUAN.npm/badging' ]
13 verbose tarball /Users/jiangjing/.npm/badging/0.0.3/package.tgz
14 verbose folder /Users/jiangjing/JPO/WorkingSpace/YUAN.npm/badging
15 verbose addLocalTarball adding from inside cache /Users/jiangjing/.npm/badging/0.0.3/package.tgz
16 verbose correctMkdir /Users/jiangjing/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd badging@0.0.3
18 verbose afterAdd /Users/jiangjing/.npm/badging/0.0.3/package/package.json not in flight; writing
19 verbose correctMkdir /Users/jiangjing/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/jiangjing/.npm/badging/0.0.3/package/package.json written
21 silly publish { name: 'badging',
21 silly publish   version: '0.0.3',
21 silly publish   description: 'Index of frequently used badges for NPM',
21 silly publish   main: 'index.js',
21 silly publish   directories: { test: 'test' },
21 silly publish   scripts: { test: 'mocha' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/YounGoat/nodejs.badging.git' },
21 silly publish   keywords: [ 'badge', 'npm', 'travis', 'license' ],
21 silly publish   author: { name: 'youngoat@163.com' },
21 silly publish   license: 'MIT',
21 silly publish   bugs: { url: 'https://github.com/YounGoat/nodejs.badging/issues' },
21 silly publish   homepage: 'https://github.com/YounGoat/nodejs.badging#readme',
21 silly publish   devDependencies: { mocha: '^3.4.1' },
21 silly publish   readme: '#\tbadging\n__Index of frequently used badges for NPM__\n\n[![total downloads of badging](https://img.shields.io/npm/dt/badging.svg)](https://www.npmjs.com/package/badging)\n[![badging\'s License](https://img.shields.io/npm/l/badging.svg)](https://www.npmjs.com/package/badging)\n[![latest version of badging](https://img.shields.io/npm/v/badging.svg)](https://www.npmjs.com/package/badging)\n[![coverage status of github.com/YounGoat/nodejs.badging](https://coveralls.io/repos/github/YounGoat/nodejs.badging/badge.svg?branch=master)](https://coveralls.io/github/YounGoat/nodejs.badging2?branch=master)\n[![dependencies of github.com/YounGoat/nodejs.badging](https://david-dm.org/YounGoat/nodejs.badging/dev-status.svg)](https://david-dm.org/YounGoat/nodejs.badging)\n[![dependencies of github.com/YounGoat/nodejs.badging](https://david-dm.org/YounGoat/nodejs.badging/status.svg)](https://david-dm.org/YounGoat/nodejs.badging?type=dev)\n[![build status of github.com/YounGoat/nodejs.badging](https://travis-ci.org/YounGoat/nodejs.badging.svg?branch=master)](https://travis-ci.org/YounGoat/nodejs.badging)\n[![star github.com/YounGoat/nodejs.badging](https://img.shields.io/github/stars/YounGoat/nodejs.badging.svg?style=social&label=Star)](https://github.com/YounGoat/nodejs.badging/stargazers)\n\n##\tGet Started\n\nInstall the package as one of dependencies of your package:\n\n```bash\nnpm install --save badging\n```\n\nThen, require it and get medal info you need. E.g.\n\n```javascript\nconst badging = require(\'badging\');\n\n// The arguments may differ (in number and content) from medal type to type.\nvar badge = badging.npm.version(\'npm-package-name\');\n\n// Generate html.\nvar html = badge.toHtml();\n\n// Generate markdown.\nvar markdown = badge.toMarkdown();\n\n// The returned info object always contains two properties: href & src.\n// Generate text at will.\nvar text = `<a href="${badge.href}"><img src="${badge.src}"/></a>`;\n```\n\n##\tEmbodied Badges\n\nBadges embodied by *badging* are classified into different groups. Same or similiar arguments are required on creating badges in same group. E.g., both `badging.npm.license()` and `badging.npm.version()` require argument named `packageName`. Up to now, there are 2 groups available:\n\n*\t__npm__  \n\tbased on *packageName*.\n*\t__github__  \n\tbased on *userName* (of github.com), *repoName* and *branch*.\n\n###\tnpm.downloads\n\n```javascript\nvar badge = badging.npm.downloads(packageName, unit);\n```\n\nThe `unit` may be one of:  \n*\tyear\n*\tmonth\n*\tweek\n*\ttotal\n\nPowered by [Shields IO](ttp://shields.io).\n\n###\tnpm.license\n\n```javascript\nvar badge = badging.npm.license(packageName);\n```\n\nPowered by [Shields IO](ttp://shields.io).\n\n###\tnpm.version\n\n```javascript\nvar badge = badging.npm.version(packageName);\n```\n\nPowered by [Shields IO](ttp://shields.io).\n\n###\tgithub.coveralls\n\n```javascript\nvar badge = badging.github.coveralls(userName, repoName);\n```\n\nPowered by [Coveralls](https://coveralls.io).\n\n###\tgithub.dependencies\n\n```javascript\nvar badge = badging.github.dependencies(userName, repoName);\n```\n\nPowered by [Davids](https://david-dm.org).\n\n###\tgithub.devDependencies\n\n```javascript\nvar badge = badging.github.devDependencies(userName, repoName);\n```\n\nPowered by [Davids](https://david-dm.org).\n\n###\tgithub.star\n\n```javascript\nvar badge = badging.github.star(userName, repoName);\n```\n\nPowered by [Shields IO](ttp://shields.io).\n\n###\tgithub.travis\n\n```javascript\nvar badge1 = badging.github.travis(userName, repoName);\nvar badge2 = badging.github.travis(userName, repoName, branch);\n```\n\nPowered by [Travis-CI](https://travis-ci.org).\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: 'ee7e8869a91d6f373203b910c5442b7058d11237',
21 silly publish   _id: 'badging@0.0.3',
21 silly publish   _shasum: 'b03a731b4486f05f1dbb10f1154468989294cbf6',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name badging
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'badging',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'badging',
26 silly mapToRegistry   name: 'badging',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/badging
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/jiangjing/.npm/badging/0.0.3/package.tgz
30 verbose request uri https://registry.npmjs.org/badging
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 11:45:49 AM
33 verbose request using bearer token for auth
34 verbose request id 51917a96408210bd
35 http request PUT https://registry.npmjs.org/badging
36 http 403 https://registry.npmjs.org/badging
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Mon, 29 May 2017 03:45:49 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-nrt6131-NRT',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1496029549.804345,VS0,VE468',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating /Users/jiangjing/.npm/registry.npmjs.org/badging on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 0.0.3." : badging
40 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
40 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
40 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:200:22)
40 verbose stack     at emitTwo (events.js:87:13)
40 verbose stack     at Request.emit (events.js:172:7)
40 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1067:10)
40 verbose stack     at emitOne (events.js:82:20)
40 verbose stack     at Request.emit (events.js:169:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:988:12)
41 verbose statusCode 403
42 verbose pkgid badging
43 verbose cwd /Users/jiangjing/JPO/WorkingSpace/YUAN.npm/badging
44 error Darwin 16.1.0
45 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
46 error node v4.4.2
47 error npm  v3.10.5
48 error code E403
49 error "You cannot publish over the previously published version 0.0.3." : badging
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
